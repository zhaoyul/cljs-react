shadow$provide.module$node_modules$$firebase$analytics$dist$index_cjs=function(global,require,module,exports){function initializeGAId(app,installations,gtagCore){return tslib.__awaiter(this,void 0,void 0,function(){var fid,_a;return tslib.__generator(this,function(_b){switch(_b.label){case 0:return[4,installations.getId()];case 1:return fid=_b.sent(),gtagCore("js",new Date),gtagCore(GtagCommand.CONFIG,app.options.measurementId,(_a={},_a.firebase_id=fid,_a.origin="firebase",_a.update=!0,_a)),[2]}})})}
function insertScriptTag(dataLayerName){var script=document.createElement("script");script.src="https://www.googletagmanager.com/gtag/js?l\x3d"+dataLayerName;script.async=!0;document.head.appendChild(script)}function getOrCreateDataLayer(dataLayerName){var dataLayer=[];Array.isArray(window[dataLayerName])?dataLayer=window[dataLayerName]:window[dataLayerName]=dataLayer;return dataLayer}function wrapGtag(gtagCore,initializedIdPromisesMap){return function(command,idOrNameOrParams,gtagParams){if(command===
GtagCommand.EVENT){command=[];if(gtagParams&&gtagParams.send_to){var gaSendToList=gtagParams.send_to;Array.isArray(gaSendToList)||(gaSendToList=[gaSendToList]);for(var _i=0;_i<gaSendToList.length;_i++){var initializationPromise=initializedIdPromisesMap[gaSendToList[_i]];if(initializationPromise)command.push(initializationPromise);else{command=[];break}}}if(0===command.length)for(_i=0,gaSendToList=Object.values(initializedIdPromisesMap);_i<gaSendToList.length;_i++)command.push(gaSendToList[_i]);Promise.all(command).then(function(){return gtagCore(GtagCommand.EVENT,
idOrNameOrParams,gtagParams||{})}).catch(function(e){return logger.error(e)})}else command===GtagCommand.CONFIG?(initializedIdPromisesMap[idOrNameOrParams]||Promise.resolve()).then(function(){gtagCore(GtagCommand.CONFIG,idOrNameOrParams,gtagParams)}).catch(function(e){return logger.error(e)}):gtagCore(GtagCommand.SET,idOrNameOrParams)}}function wrapOrCreateGtag(initializedIdPromisesMap,dataLayerName,gtagFunctionName){var gtagCore=function(){for(var _i=0;_i<arguments.length;_i++);window[dataLayerName].push(arguments)};
window[gtagFunctionName]&&"function"===typeof window[gtagFunctionName]&&(gtagCore=window[gtagFunctionName]);window[gtagFunctionName]=wrapGtag(gtagCore,initializedIdPromisesMap);return{gtagCore:gtagCore,wrappedGtag:window[gtagFunctionName]}}function findGtagScriptOnPage(){var scriptTags=window.document.getElementsByTagName("script"),_i=0;for(scriptTags=Object.values(scriptTags);_i<scriptTags.length;_i++){var tag=scriptTags[_i];if(tag.src&&tag.src.includes("https://www.googletagmanager.com/gtag/js"))return tag}return null}
function settings(options){if(globalInitDone)throw ERROR_FACTORY.create("already-initialized");options.dataLayerName&&(dataLayerName=options.dataLayerName);options.gtagName&&(gtagName=options.gtagName)}function factory(app,installations){if(util.isBrowserExtension())throw ERROR_FACTORY.create("invalid-analytics-context");if(!util.areCookiesEnabled())throw ERROR_FACTORY.create("cookies-not-enabled");if(!util.isIndexedDBAvailable())throw ERROR_FACTORY.create("indexedDB-unsupported");util.validateIndexedDBOpenable().catch(function(error){throw ERROR_FACTORY.create("invalid-indexedDB-context",
{errorInfo:error});});var analyticsId=app.options.measurementId;if(!analyticsId)throw ERROR_FACTORY.create("no-ga-id");if(null!=initializedIdPromisesMap[analyticsId])throw ERROR_FACTORY.create("already-exists",{id:analyticsId});if(!globalInitDone){findGtagScriptOnPage()||insertScriptTag(dataLayerName);getOrCreateDataLayer(dataLayerName);var _a$jscomp$0=wrapOrCreateGtag(initializedIdPromisesMap,dataLayerName,gtagName),gtagCore=_a$jscomp$0.gtagCore;wrappedGtagFunction=_a$jscomp$0.wrappedGtag;gtagCoreFunction=
gtagCore;globalInitDone=!0}initializedIdPromisesMap[analyticsId]=initializeGAId(app,installations,gtagCoreFunction);return{app:app,logEvent:function(eventName,eventParams,options){var gtagFunction=wrappedGtagFunction,params=eventParams||{};options&&options.global||(params=tslib.__assign(tslib.__assign({},eventParams),{send_to:analyticsId}));gtagFunction(GtagCommand.EVENT,eventName,params||{})},setCurrentScreen:function(screenName,options){var gtagFunction=wrappedGtagFunction;options&&options.global?
gtagFunction(GtagCommand.SET,{screen_name:screenName}):gtagFunction(GtagCommand.CONFIG,analyticsId,{update:!0,screen_name:screenName})},setUserId:function(id,options){var gtagFunction=wrappedGtagFunction;options&&options.global?gtagFunction(GtagCommand.SET,{user_id:id}):gtagFunction(GtagCommand.CONFIG,analyticsId,{update:!0,user_id:id})},setUserProperties:function(properties,options){var gtagFunction=wrappedGtagFunction;if(options&&options.global){options={};for(var _i=0,_a=Object.keys(properties);_i<
_a.length;_i++){var key=_a[_i];options["user_properties."+key]=properties[key]}gtagFunction(GtagCommand.SET,options)}else gtagFunction(GtagCommand.CONFIG,analyticsId,{update:!0,user_properties:properties})},setAnalyticsCollectionEnabled:function(enabled){window["ga-disable-"+analyticsId]=!enabled}}}function registerAnalytics(instance){instance.INTERNAL.registerComponent((new component.Component("analytics",function(container){var app=container.getProvider("app").getImmediate();container=container.getProvider("installations").getImmediate();
return factory(app,container)},"PUBLIC")).setServiceProps({settings:settings,EventName:EventName,isSupported:isSupported}));instance.INTERNAL.registerComponent(new component.Component("analytics-internal",function(container){try{return{logEvent:container.getProvider("analytics").getImmediate().logEvent}}catch(e){throw ERROR_FACTORY.create("interop-component-reg-failed",{reason:e});}},"PRIVATE"));instance.registerVersion("@firebase/analytics","0.4.2")}function isSupported(){return tslib.__awaiter(this,
void 0,void 0,function(){var isDBOpenable;return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(util.isBrowserExtension()||!util.areCookiesEnabled()||!util.isIndexedDBAvailable())return[2,!1];_a.label=1;case 1:return _a.trys.push([1,3,,4]),[4,util.validateIndexedDBOpenable()];case 2:return isDBOpenable=_a.sent(),[2,isDBOpenable];case 3:return _a.sent(),[2,!1];case 4:return[2]}})})}Object.defineProperty(exports,"__esModule",{value:!0});var tslib=require("module$node_modules$tslib$tslib");
global=function(ex){return ex&&"object"===typeof ex&&"default"in ex?ex["default"]:ex}(require("module$node_modules$$firebase$app$dist$index_cjs"));require("module$node_modules$$firebase$installations$dist$index_cjs");module=require("module$node_modules$$firebase$logger$dist$index_cjs");var util=require("module$node_modules$$firebase$util$dist$index_cjs"),component=require("module$node_modules$$firebase$component$dist$index_cjs"),GtagCommand;(function(GtagCommand){GtagCommand.EVENT="event";GtagCommand.SET=
"set";GtagCommand.CONFIG="config"})(GtagCommand||(GtagCommand={}));var EventName;(function(EventName){EventName.ADD_SHIPPING_INFO="add_shipping_info";EventName.ADD_PAYMENT_INFO="add_payment_info";EventName.ADD_TO_CART="add_to_cart";EventName.ADD_TO_WISHLIST="add_to_wishlist";EventName.BEGIN_CHECKOUT="begin_checkout";EventName.CHECKOUT_PROGRESS="checkout_progress";EventName.EXCEPTION="exception";EventName.GENERATE_LEAD="generate_lead";EventName.LOGIN="login";EventName.PAGE_VIEW="page_view";EventName.PURCHASE=
"purchase";EventName.REFUND="refund";EventName.REMOVE_FROM_CART="remove_from_cart";EventName.SCREEN_VIEW="screen_view";EventName.SEARCH="search";EventName.SELECT_CONTENT="select_content";EventName.SELECT_ITEM="select_item";EventName.SELECT_PROMOTION="select_promotion";EventName.SET_CHECKOUT_OPTION="set_checkout_option";EventName.SHARE="share";EventName.SIGN_UP="sign_up";EventName.TIMING_COMPLETE="timing_complete";EventName.VIEW_CART="view_cart";EventName.VIEW_ITEM="view_item";EventName.VIEW_ITEM_LIST=
"view_item_list";EventName.VIEW_PROMOTION="view_promotion";EventName.VIEW_SEARCH_RESULTS="view_search_results"})(EventName||(EventName={}));var logger=new module.Logger("@firebase/analytics"),_a$jscomp$1;require=(_a$jscomp$1={},_a$jscomp$1["no-ga-id"]='"measurementId" field is empty in Firebase config. Firebase Analytics requires this field to contain a valid measurement ID.',_a$jscomp$1["already-exists"]="A Firebase Analytics instance with the measurement ID ${id}  already exists. Only one Firebase Analytics instance can be created for each measurement ID.",
_a$jscomp$1["already-initialized"]="Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.",_a$jscomp$1["interop-component-reg-failed"]="Firebase Analytics Interop Component failed to instantiate",_a$jscomp$1["indexedDB-unsupported"]="IndexedDB is not supported by current browswer",_a$jscomp$1["invalid-indexedDB-context"]="Environment doesn't support IndexedDB: {$errorInfo}. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments",
_a$jscomp$1["cookies-not-enabled"]="Cookies are not enabled in this browser environment. Analytics requires cookies to be enabled.",_a$jscomp$1["invalid-analytics-context"]="Firebase Analytics is not supported in browser extensions.",_a$jscomp$1);var ERROR_FACTORY=new util.ErrorFactory("analytics","Analytics",require),initializedIdPromisesMap={},dataLayerName="dataLayer",gtagName="gtag",gtagCoreFunction,wrappedGtagFunction,globalInitDone=!1;registerAnalytics(global);exports.factory=factory;exports.getGlobalVars=
function(){return{initializedIdPromisesMap:initializedIdPromisesMap}};exports.registerAnalytics=registerAnalytics;exports.resetGlobalVars=function(newGlobalInitDone,newGaInitializedPromise){void 0===newGlobalInitDone&&(newGlobalInitDone=!1);void 0===newGaInitializedPromise&&(newGaInitializedPromise={});globalInitDone=newGlobalInitDone;initializedIdPromisesMap=newGaInitializedPromise;dataLayerName="dataLayer";gtagName="gtag"};exports.settings=settings}
//# sourceMappingURL=module$node_modules$$firebase$analytics$dist$index_cjs.js.map
