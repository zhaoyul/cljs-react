{"version":3,"sources":["app/domain/firebase_test.cljs"],"mappings":"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","names":["cljs.test/test-var","app.domain.firebase-test/create-graphic-error-test","db","cljs.test.update_current_env_BANG_","cljs.core/conj","cljs.test/update-current-env!","cljs.core/rest","res","app.domain.firebase/create-graphic-error-handler","values__9934__auto__","cljs.core/List","result__9935__auto__","cljs.core.apply","cljs.test/report","cljs.core/cons","t__9971__auto__","e41051","cljs.core/not","cljs.core/contains?","e41052","cljs.core/=","p__41053","vec__41054","cljs.core.nth","app.domain.firebase-test/on-success","_","e41057","p__41058","vec__41059","app.domain.firebase-test/on-error","e41062","app.domain.firebase-test/effect-test","re_frame.core.reg_event_db","re_frame.core.reg_event_fx","throw-error?","re-frame.core/dispatch"],"sourcesContent":["(ns app.domain.firebase-test\n  (:require [app.domain.firebase :as firebase]\n            [re-frame.core :as rf]\n            [cljs.test :refer-macros [deftest is testing]]))\n\n(deftest create-graphic-error-test\n  (let [db {:app.domain.firebase/creating-graphic? true}]\n\n    (testing \"unsets creating-graphic? flag\"\n      (let [res (firebase/create-graphic-error-handler db [])]\n        (is (not (contains? res :app.domain.firebase/creating-graphic?)))))\n\n    (testing \"sets create-graphic-error\"\n      (let [res (firebase/create-graphic-error-handler db [:ev-name :custom-error])]\n        (is (= :custom-error\n               (-> res :app.domain.firebase/create-graphic-error)\n             ))))))\n\n;; 1. setup test handlers\n(defn on-success [_ [_ res]]\n  (is (= res :success-res)))\n\n(defn on-error [_ [_ res]]\n  (is (= res :error-res)))\n\n(deftest effect-test\n  ;; 2. register test handlers\n  (rf/reg-event-db :test-on-success on-success)\n  (rf/reg-event-db :test-on-error on-error)\n\n  ;; 3. register event handler to call effect\n  (rf/reg-event-fx\n   :test-firebase-effect\n   (fn [_ throw-error?]\n     {:firebase/effect-to-test {:throw-error? throw-error?\n                                :on-success [:test-on-success]\n                                :on-error [:test-on-error]}}))\n\n  (testing \"error handler is called with :error-res when throw-error? is true\"\n    (rf/dispatch [:test-firebase-effect true]))\n\n  (testing \"success handler is called with :success-res when throw-error? is false\"\n    (rf/dispatch [:test-firebase-effect false]))\n  )\n"]}