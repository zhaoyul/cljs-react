{
"version":3,
"file":"module$node_modules$$firebase$analytics$dist$index_cjs.js",
"lineCount":19,
"mappings":"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",
"sources":["node_modules/@firebase/analytics/dist/index.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$firebase$analytics$dist$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar tslib = require('tslib');\nvar firebase = _interopDefault(require('@firebase/app'));\nrequire('@firebase/installations');\nvar logger$1 = require('@firebase/logger');\nvar util = require('@firebase/util');\nvar component = require('@firebase/component');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ANALYTICS_ID_FIELD = 'measurementId';\r\n// Key to attach FID to in gtag params.\r\nvar GA_FID_KEY = 'firebase_id';\r\nvar ORIGIN_KEY = 'origin';\r\nvar GTAG_URL = 'https://www.googletagmanager.com/gtag/js';\r\nvar GtagCommand;\r\n(function (GtagCommand) {\r\n    GtagCommand[\"EVENT\"] = \"event\";\r\n    GtagCommand[\"SET\"] = \"set\";\r\n    GtagCommand[\"CONFIG\"] = \"config\";\r\n})(GtagCommand || (GtagCommand = {}));\r\n/*\r\n * Officially recommended event names for gtag.js\r\n * Any other string is also allowed.\r\n */\r\nvar EventName;\r\n(function (EventName) {\r\n    EventName[\"ADD_SHIPPING_INFO\"] = \"add_shipping_info\";\r\n    EventName[\"ADD_PAYMENT_INFO\"] = \"add_payment_info\";\r\n    EventName[\"ADD_TO_CART\"] = \"add_to_cart\";\r\n    EventName[\"ADD_TO_WISHLIST\"] = \"add_to_wishlist\";\r\n    EventName[\"BEGIN_CHECKOUT\"] = \"begin_checkout\";\r\n    /** @deprecated */\r\n    EventName[\"CHECKOUT_PROGRESS\"] = \"checkout_progress\";\r\n    EventName[\"EXCEPTION\"] = \"exception\";\r\n    EventName[\"GENERATE_LEAD\"] = \"generate_lead\";\r\n    EventName[\"LOGIN\"] = \"login\";\r\n    EventName[\"PAGE_VIEW\"] = \"page_view\";\r\n    EventName[\"PURCHASE\"] = \"purchase\";\r\n    EventName[\"REFUND\"] = \"refund\";\r\n    EventName[\"REMOVE_FROM_CART\"] = \"remove_from_cart\";\r\n    EventName[\"SCREEN_VIEW\"] = \"screen_view\";\r\n    EventName[\"SEARCH\"] = \"search\";\r\n    EventName[\"SELECT_CONTENT\"] = \"select_content\";\r\n    EventName[\"SELECT_ITEM\"] = \"select_item\";\r\n    EventName[\"SELECT_PROMOTION\"] = \"select_promotion\";\r\n    /** @deprecated */\r\n    EventName[\"SET_CHECKOUT_OPTION\"] = \"set_checkout_option\";\r\n    EventName[\"SHARE\"] = \"share\";\r\n    EventName[\"SIGN_UP\"] = \"sign_up\";\r\n    EventName[\"TIMING_COMPLETE\"] = \"timing_complete\";\r\n    EventName[\"VIEW_CART\"] = \"view_cart\";\r\n    EventName[\"VIEW_ITEM\"] = \"view_item\";\r\n    EventName[\"VIEW_ITEM_LIST\"] = \"view_item_list\";\r\n    EventName[\"VIEW_PROMOTION\"] = \"view_promotion\";\r\n    EventName[\"VIEW_SEARCH_RESULTS\"] = \"view_search_results\";\r\n})(EventName || (EventName = {}));\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Logs an analytics event through the Firebase SDK.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\r\n * @param eventParams Analytics event parameters.\r\n */\r\nfunction logEvent(gtagFunction, analyticsId, eventName, eventParams, options) {\r\n    var params = eventParams || {};\r\n    if (!options || !options.global) {\r\n        params = tslib.__assign(tslib.__assign({}, eventParams), { 'send_to': analyticsId });\r\n    }\r\n    // Workaround for http://b/141370449 - third argument cannot be undefined.\r\n    gtagFunction(GtagCommand.EVENT, eventName, params || {});\r\n}\r\n// TODO: Brad is going to add `screen_name` to GA Gold config parameter schema\r\n/**\r\n * Set screen_name parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param screenName Screen name string to set.\r\n */\r\nfunction setCurrentScreen(gtagFunction, analyticsId, screenName, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(GtagCommand.SET, { 'screen_name': screenName });\r\n    }\r\n    else {\r\n        gtagFunction(GtagCommand.CONFIG, analyticsId, {\r\n            update: true,\r\n            'screen_name': screenName\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set user_id parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param id User ID string to set\r\n */\r\nfunction setUserId(gtagFunction, analyticsId, id, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(GtagCommand.SET, { 'user_id': id });\r\n    }\r\n    else {\r\n        gtagFunction(GtagCommand.CONFIG, analyticsId, {\r\n            update: true,\r\n            'user_id': id\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set all other user properties other than user_id and screen_name.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param properties Map of user properties to set\r\n */\r\nfunction setUserProperties(gtagFunction, analyticsId, properties, options) {\r\n    if (options && options.global) {\r\n        var flatProperties = {};\r\n        for (var _i = 0, _a = Object.keys(properties); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            // use dot notation for merge behavior in gtag.js\r\n            flatProperties[\"user_properties.\" + key] = properties[key];\r\n        }\r\n        gtagFunction(GtagCommand.SET, flatProperties);\r\n    }\r\n    else {\r\n        gtagFunction(GtagCommand.CONFIG, analyticsId, {\r\n            update: true,\r\n            'user_properties': properties\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set whether collection is enabled for this ID.\r\n *\r\n * @param enabled If true, collection is enabled for this ID.\r\n */\r\nfunction setAnalyticsCollectionEnabled(analyticsId, enabled) {\r\n    window[\"ga-disable-\" + analyticsId] = !enabled;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger = new logger$1.Logger('@firebase/analytics');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Initialize the analytics instance in gtag.js by calling config command with fid.\r\n *\r\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\r\n * part of the `page_view` event that's sent during the initialization\r\n * @param app Firebase app\r\n * @param gtagCore The gtag function that's not wrapped.\r\n */\r\nfunction initializeGAId(app, installations, gtagCore) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var fid;\r\n        var _a;\r\n        return tslib.__generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, installations.getId()];\r\n                case 1:\r\n                    fid = _b.sent();\r\n                    // This command initializes gtag.js and only needs to be called once for the entire web app,\r\n                    // but since it is idempotent, we can call it multiple times.\r\n                    // We keep it together with other initialization logic for better code structure.\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    gtagCore('js', new Date());\r\n                    // It should be the first config command called on this GA-ID\r\n                    // Initialize this GA-ID and set FID on it using the gtag config API.\r\n                    gtagCore(GtagCommand.CONFIG, app.options[ANALYTICS_ID_FIELD], (_a = {},\r\n                        _a[GA_FID_KEY] = fid,\r\n                        // guard against developers accidentally setting properties with prefix `firebase_`\r\n                        _a[ORIGIN_KEY] = 'firebase',\r\n                        _a.update = true,\r\n                        _a));\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction insertScriptTag(dataLayerName) {\r\n    var script = document.createElement('script');\r\n    // We are not providing an analyticsId in the URL because it would trigger a `page_view`\r\n    // without fid. We will initialize ga-id using gtag (config) command together with fid.\r\n    script.src = GTAG_URL + \"?l=\" + dataLayerName;\r\n    script.async = true;\r\n    document.head.appendChild(script);\r\n}\r\n/** Get reference to, or create, global datalayer.\r\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\")\r\n */\r\nfunction getOrCreateDataLayer(dataLayerName) {\r\n    // Check for existing dataLayer and create if needed.\r\n    var dataLayer = [];\r\n    if (Array.isArray(window[dataLayerName])) {\r\n        dataLayer = window[dataLayerName];\r\n    }\r\n    else {\r\n        window[dataLayerName] = dataLayer;\r\n    }\r\n    return dataLayer;\r\n}\r\n/**\r\n * Wraps a standard gtag function with extra code to wait for completion of\r\n * relevant initialization promises before sending requests.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer\r\n * @param initializedIdPromisesMap Map of gaIds to their initialization promises\r\n */\r\nfunction wrapGtag(gtagCore, initializedIdPromisesMap) {\r\n    return function (command, idOrNameOrParams, gtagParams) {\r\n        // If event, check that relevant initialization promises have completed.\r\n        if (command === GtagCommand.EVENT) {\r\n            var initializationPromisesToWaitFor = [];\r\n            // If there's a 'send_to' param, check if any ID specified matches\r\n            // a FID we have begun a fetch on.\r\n            if (gtagParams && gtagParams['send_to']) {\r\n                var gaSendToList = gtagParams['send_to'];\r\n                // Make it an array if is isn't, so it can be dealt with the same way.\r\n                if (!Array.isArray(gaSendToList)) {\r\n                    gaSendToList = [gaSendToList];\r\n                }\r\n                for (var _i = 0, gaSendToList_1 = gaSendToList; _i < gaSendToList_1.length; _i++) {\r\n                    var sendToId = gaSendToList_1[_i];\r\n                    var initializationPromise = initializedIdPromisesMap[sendToId];\r\n                    // Groups will not be in the map.\r\n                    if (initializationPromise) {\r\n                        initializationPromisesToWaitFor.push(initializationPromise);\r\n                    }\r\n                    else {\r\n                        // There is an item in 'send_to' that is not associated\r\n                        // directly with an FID, possibly a group.  Empty this array\r\n                        // and let it get populated below.\r\n                        initializationPromisesToWaitFor = [];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // This will be unpopulated if there was no 'send_to' field , or\r\n            // if not all entries in the 'send_to' field could be mapped to\r\n            // a FID. In these cases, wait on all pending initialization promises.\r\n            if (initializationPromisesToWaitFor.length === 0) {\r\n                for (var _a = 0, _b = Object.values(initializedIdPromisesMap); _a < _b.length; _a++) {\r\n                    var idPromise = _b[_a];\r\n                    initializationPromisesToWaitFor.push(idPromise);\r\n                }\r\n            }\r\n            // Run core gtag function with args after all relevant initialization\r\n            // promises have been resolved.\r\n            Promise.all(initializationPromisesToWaitFor)\r\n                // Workaround for http://b/141370449 - third argument cannot be undefined.\r\n                .then(function () {\r\n                return gtagCore(GtagCommand.EVENT, idOrNameOrParams, gtagParams || {});\r\n            })\r\n                .catch(function (e) { return logger.error(e); });\r\n        }\r\n        else if (command === GtagCommand.CONFIG) {\r\n            var initializationPromiseToWait = initializedIdPromisesMap[idOrNameOrParams] ||\r\n                Promise.resolve();\r\n            initializationPromiseToWait\r\n                .then(function () {\r\n                gtagCore(GtagCommand.CONFIG, idOrNameOrParams, gtagParams);\r\n            })\r\n                .catch(function (e) { return logger.error(e); });\r\n        }\r\n        else {\r\n            // SET command.\r\n            // Splitting calls for CONFIG and SET to make it clear which signature\r\n            // Typescript is checking.\r\n            gtagCore(GtagCommand.SET, idOrNameOrParams);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Creates global gtag function or wraps existing one if found.\r\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\r\n * 'event' calls that belong to the GAID associated with this Firebase instance.\r\n *\r\n * @param initializedIdPromisesMap Map of gaId to initialization promises.\r\n * @param dataLayerName Name of global GA datalayer array.\r\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified)\r\n */\r\nfunction wrapOrCreateGtag(initializedIdPromisesMap, dataLayerName, gtagFunctionName) {\r\n    // Create a basic core gtag function\r\n    var gtagCore = function () {\r\n        var _args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            _args[_i] = arguments[_i];\r\n        }\r\n        // Must push IArguments object, not an array.\r\n        window[dataLayerName].push(arguments);\r\n    };\r\n    // Replace it with existing one if found\r\n    if (window[gtagFunctionName] &&\r\n        typeof window[gtagFunctionName] === 'function') {\r\n        // @ts-ignore\r\n        gtagCore = window[gtagFunctionName];\r\n    }\r\n    window[gtagFunctionName] = wrapGtag(gtagCore, initializedIdPromisesMap);\r\n    return {\r\n        gtagCore: gtagCore,\r\n        wrappedGtag: window[gtagFunctionName]\r\n    };\r\n}\r\n/**\r\n * Returns first script tag in DOM matching our gtag url pattern.\r\n */\r\nfunction findGtagScriptOnPage() {\r\n    var scriptTags = window.document.getElementsByTagName('script');\r\n    for (var _i = 0, _a = Object.values(scriptTags); _i < _a.length; _i++) {\r\n        var tag = _a[_i];\r\n        if (tag.src && tag.src.includes(GTAG_URL)) {\r\n            return tag;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERRORS = (_a = {},\r\n    _a[\"no-ga-id\" /* NO_GA_ID */] = \"\\\"\" + ANALYTICS_ID_FIELD + \"\\\" field is empty in \" +\r\n        'Firebase config. Firebase Analytics ' +\r\n        'requires this field to contain a valid measurement ID.',\r\n    _a[\"already-exists\" /* ALREADY_EXISTS */] = 'A Firebase Analytics instance with the measurement ID ${id} ' +\r\n        ' already exists. ' +\r\n        'Only one Firebase Analytics instance can be created for each measurement ID.',\r\n    _a[\"already-initialized\" /* ALREADY_INITIALIZED */] = 'Firebase Analytics has already been initialized.' +\r\n        'settings() must be called before initializing any Analytics instance' +\r\n        'or it will have no effect.',\r\n    _a[\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */] = 'Firebase Analytics Interop Component failed to instantiate',\r\n    _a[\"indexedDB-unsupported\" /* INDEXED_DB_UNSUPPORTED */] = 'IndexedDB is not supported by current browswer',\r\n    _a[\"invalid-indexedDB-context\" /* INVALID_INDEXED_DB_CONTEXT */] = \"Environment doesn't support IndexedDB: {$errorInfo}. \" +\r\n        'Wrap initialization of analytics in analytics.isSupported() ' +\r\n        'to prevent initialization in unsupported environments',\r\n    _a[\"cookies-not-enabled\" /* COOKIES_NOT_ENABLED */] = 'Cookies are not enabled in this browser environment. Analytics requires cookies to be enabled.',\r\n    _a[\"invalid-analytics-context\" /* INVALID_ANALYTICS_CONTEXT */] = 'Firebase Analytics is not supported in browser extensions.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory('analytics', 'Analytics', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Maps gaId to FID fetch promises.\r\n */\r\nvar initializedIdPromisesMap = {};\r\n/**\r\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\r\n */\r\nvar dataLayerName = 'dataLayer';\r\n/**\r\n * Name for window global gtag function used by GA: defaults to 'gtag'.\r\n */\r\nvar gtagName = 'gtag';\r\n/**\r\n * Reproduction of standard gtag function or reference to existing\r\n * gtag function on window object.\r\n */\r\nvar gtagCoreFunction;\r\n/**\r\n * Wrapper around gtag function that ensures FID is sent with all\r\n * relevant event and config calls.\r\n */\r\nvar wrappedGtagFunction;\r\n/**\r\n * Flag to ensure page initialization steps (creation or wrapping of\r\n * dataLayer and gtag script) are only run once per page load.\r\n */\r\nvar globalInitDone = false;\r\n/**\r\n * For testing\r\n */\r\nfunction resetGlobalVars(newGlobalInitDone, newGaInitializedPromise) {\r\n    if (newGlobalInitDone === void 0) { newGlobalInitDone = false; }\r\n    if (newGaInitializedPromise === void 0) { newGaInitializedPromise = {}; }\r\n    globalInitDone = newGlobalInitDone;\r\n    initializedIdPromisesMap = newGaInitializedPromise;\r\n    dataLayerName = 'dataLayer';\r\n    gtagName = 'gtag';\r\n}\r\n/**\r\n * For testing\r\n */\r\nfunction getGlobalVars() {\r\n    return {\r\n        initializedIdPromisesMap: initializedIdPromisesMap\r\n    };\r\n}\r\n/**\r\n * This must be run before calling firebase.analytics() or it won't\r\n * have any effect.\r\n * @param options Custom gtag and dataLayer names.\r\n */\r\nfunction settings(options) {\r\n    if (globalInitDone) {\r\n        throw ERROR_FACTORY.create(\"already-initialized\" /* ALREADY_INITIALIZED */);\r\n    }\r\n    if (options.dataLayerName) {\r\n        dataLayerName = options.dataLayerName;\r\n    }\r\n    if (options.gtagName) {\r\n        gtagName = options.gtagName;\r\n    }\r\n}\r\nfunction factory(app, installations) {\r\n    if (util.isBrowserExtension()) {\r\n        throw ERROR_FACTORY.create(\"invalid-analytics-context\" /* INVALID_ANALYTICS_CONTEXT */);\r\n    }\r\n    if (!util.areCookiesEnabled()) {\r\n        throw ERROR_FACTORY.create(\"cookies-not-enabled\" /* COOKIES_NOT_ENABLED */);\r\n    }\r\n    if (!util.isIndexedDBAvailable()) {\r\n        throw ERROR_FACTORY.create(\"indexedDB-unsupported\" /* INDEXED_DB_UNSUPPORTED */);\r\n    }\r\n    // Async but non-blocking.\r\n    util.validateIndexedDBOpenable().catch(function (error) {\r\n        throw ERROR_FACTORY.create(\"invalid-indexedDB-context\" /* INVALID_INDEXED_DB_CONTEXT */, {\r\n            errorInfo: error\r\n        });\r\n    });\r\n    var analyticsId = app.options[ANALYTICS_ID_FIELD];\r\n    if (!analyticsId) {\r\n        throw ERROR_FACTORY.create(\"no-ga-id\" /* NO_GA_ID */);\r\n    }\r\n    if (initializedIdPromisesMap[analyticsId] != null) {\r\n        throw ERROR_FACTORY.create(\"already-exists\" /* ALREADY_EXISTS */, {\r\n            id: analyticsId\r\n        });\r\n    }\r\n    if (!globalInitDone) {\r\n        // Steps here should only be done once per page: creation or wrapping\r\n        // of dataLayer and global gtag function.\r\n        // Detect if user has already put the gtag <script> tag on this page.\r\n        if (!findGtagScriptOnPage()) {\r\n            insertScriptTag(dataLayerName);\r\n        }\r\n        getOrCreateDataLayer(dataLayerName);\r\n        var _a = wrapOrCreateGtag(initializedIdPromisesMap, dataLayerName, gtagName), wrappedGtag = _a.wrappedGtag, gtagCore = _a.gtagCore;\r\n        wrappedGtagFunction = wrappedGtag;\r\n        gtagCoreFunction = gtagCore;\r\n        globalInitDone = true;\r\n    }\r\n    // Async but non-blocking.\r\n    initializedIdPromisesMap[analyticsId] = initializeGAId(app, installations, gtagCoreFunction);\r\n    var analyticsInstance = {\r\n        app: app,\r\n        logEvent: function (eventName, eventParams, options) {\r\n            return logEvent(wrappedGtagFunction, analyticsId, eventName, eventParams, options);\r\n        },\r\n        setCurrentScreen: function (screenName, options) {\r\n            return setCurrentScreen(wrappedGtagFunction, analyticsId, screenName, options);\r\n        },\r\n        setUserId: function (id, options) {\r\n            return setUserId(wrappedGtagFunction, analyticsId, id, options);\r\n        },\r\n        setUserProperties: function (properties, options) {\r\n            return setUserProperties(wrappedGtagFunction, analyticsId, properties, options);\r\n        },\r\n        setAnalyticsCollectionEnabled: function (enabled) {\r\n            return setAnalyticsCollectionEnabled(analyticsId, enabled);\r\n        }\r\n    };\r\n    return analyticsInstance;\r\n}\n\nvar name = \"@firebase/analytics\";\nvar version = \"0.4.2\";\n\n/**\r\n * Type constant for Firebase Analytics.\r\n */\r\nvar ANALYTICS_TYPE = 'analytics';\r\nfunction registerAnalytics(instance) {\r\n    instance.INTERNAL.registerComponent(new component.Component(ANALYTICS_TYPE, function (container) {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factory(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */).setServiceProps({\r\n        settings: settings,\r\n        EventName: EventName,\r\n        isSupported: isSupported\r\n    }));\r\n    instance.INTERNAL.registerComponent(new component.Component('analytics-internal', internalFactory, \"PRIVATE\" /* PRIVATE */));\r\n    instance.registerVersion(name, version);\r\n    function internalFactory(container) {\r\n        try {\r\n            var analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();\r\n            return {\r\n                logEvent: analytics.logEvent\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ERROR_FACTORY.create(\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */, {\r\n                reason: e\r\n            });\r\n        }\r\n    }\r\n}\r\nregisterAnalytics(firebase);\r\n/**\r\n * this is a public static method provided to users that wraps four different checks:\r\n *\r\n * 1. check if it's not a browser extension environment.\r\n * 1. check if cookie is enabled in current browser.\r\n * 3. check if IndexedDB is supported by the browser environment.\r\n * 4. check if the current browser context is valid for using IndexedDB.\r\n *\r\n */\r\nfunction isSupported() {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var isDBOpenable, error_1;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (util.isBrowserExtension()) {\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    if (!util.areCookiesEnabled()) {\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    if (!util.isIndexedDBAvailable()) {\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, util.validateIndexedDBOpenable()];\r\n                case 2:\r\n                    isDBOpenable = _a.sent();\r\n                    return [2 /*return*/, isDBOpenable];\r\n                case 3:\r\n                    error_1 = _a.sent();\r\n                    return [2 /*return*/, false];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\nexports.factory = factory;\nexports.getGlobalVars = getGlobalVars;\nexports.registerAnalytics = registerAnalytics;\nexports.resetGlobalVars = resetGlobalVars;\nexports.settings = settings;\n//# sourceMappingURL=index.cjs.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","initializeGAId","app","installations","gtagCore","tslib","__awaiter","fid","_a","__generator","_b","label","getId","sent","Date","GtagCommand","CONFIG","options","ANALYTICS_ID_FIELD","GA_FID_KEY","ORIGIN_KEY","update","insertScriptTag","dataLayerName","script","document","createElement","src","async","head","appendChild","getOrCreateDataLayer","dataLayer","Array","isArray","window","wrapGtag","initializedIdPromisesMap","command","idOrNameOrParams","gtagParams","EVENT","initializationPromisesToWaitFor","gaSendToList","_i","gaSendToList_1","length","initializationPromise","sendToId","push","Object","values","idPromise","Promise","all","then","catch","e","logger","error","resolve","SET","wrapOrCreateGtag","gtagFunctionName","arguments","wrappedGtag","findGtagScriptOnPage","scriptTags","getElementsByTagName","tag","includes","GTAG_URL","settings","globalInitDone","ERROR_FACTORY","create","gtagName","factory","util","isBrowserExtension","areCookiesEnabled","isIndexedDBAvailable","validateIndexedDBOpenable","errorInfo","analyticsId","id","wrappedGtagFunction","gtagCoreFunction","analyticsInstance","logEvent","eventName","eventParams","params","__assign","gtagFunction","setCurrentScreen","screenName","setUserId","setUserProperties","properties","flatProperties","keys","key","setAnalyticsCollectionEnabled","enabled","registerAnalytics","instance","INTERNAL","registerComponent","component","Component","ANALYTICS_TYPE","container","getProvider","getImmediate","setServiceProps","EventName","isSupported","internalFactory","analytics","reason","registerVersion","name","version","isDBOpenable","trys","defineProperty","value","firebase","_interopDefault","ex","logger$1","Logger","ERRORS","ErrorFactory","getGlobalVars","resetGlobalVars","newGlobalInitDone","newGaInitializedPromise"]
}
