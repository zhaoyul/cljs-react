{
"version":3,
"file":"module$node_modules$$firebase$database$dist$index_cjs.js",
"lineCount":487,
"mappings":"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",
"sources":["node_modules/@firebase/database/dist/index.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$firebase$database$dist$index_cjs\"] = function(global,require,module,exports) {\nvar process = require('process');\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger$1.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += util.stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger$1.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n */\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return util.stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length) {\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        }\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0) {\r\n                    pieces.push(childPieces[i]);\r\n                }\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n        }\r\n        if (leftKeys.length === rightKeys.length) {\r\n            return 0;\r\n        }\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = tslib.__assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = tslib.__assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (util.contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param failureCallbackOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = this.path_.child(childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return this.syncTree_.calcCompleteEventCache(this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            util.assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        util.assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    util.assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children.size > 0) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = path.getFront();\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        util.assert(type === Change.CHILD_ADDED ||\r\n            type === Change.CHILD_CHANGED ||\r\n            type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\n// eslint-disable-next-line @typescript-eslint/class-name-casing\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap.getNode().equals(/** @type {!Node} */ oldCompleteSnap)) ||\r\n                !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey === '.priority') {\r\n                    util.assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache.getServerCache().getNode().isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ eventCache, eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ serverCache, serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views.set(queryId, view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = tslib.__read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view.getQuery().getQueryParams().loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        each(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param path The path to check for\r\n     * @return Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param path The path to get a complete write\r\n     * @return The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param node The node to apply this CompoundWrite to\r\n     * @return The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return applySubtreeWrite(Path.Empty, this.writeTree_, node);\r\n    };\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    return CompoundWrite;\r\n}());\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    writeRecord.path.child(childName).contains(path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n     * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n     * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n     *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = tslib.__assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} varArgs\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = tslib.__spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (util.isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";\u003c/script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param applicationId_ The Firebase App ID for this project\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient, app, authTokenProvider) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactionsInit_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var existing = this.serverSyncTree_.calcCompleteEventCache(path);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = new SparseSnapshotTree();\r\n        this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\r\n            var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\r\n            resolvedOnDisconnectTree.remember(path, resolved);\r\n        });\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty()) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.path.getBack();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = path.getFront();\r\n        while (next !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n            next = path.getFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.transactionsInit_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    }\r\n                    else {\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    front = path.getFront();\r\n    while (front !== null && transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n        front = path.getFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var isEmulator;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            isEmulator = true;\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        else {\r\n            isEmulator = !parsedUrl.repoInfo.secure;\r\n        }\r\n        var authTokenProvider = util.CONSTANTS.NODE_ADMIN && isEmulator\r\n            ? new EmulatorAdminTokenProvider()\r\n            : new FirebaseAuthTokenProvider(app, authProvider);\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authTokenProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        },\r\n        increment: function (delta) {\r\n            return {\r\n                '.sv': {\r\n                    'increment': delta\r\n                }\r\n            };\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.checkDeleted_('delete');\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.repo_ = null;\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.6.11\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new component.Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;\n//# sourceMappingURL=index.cjs.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","each","obj","fn","key","hasOwnProperty","NAME_ONLY_COMPARATOR","left","right","nameCompare","name","NAME_COMPARATOR","nodeFromJSON$1","json","priority","ChildrenNode","EMPTY_NODE","util","assert","LeafNode","Array","node_1","childData","contains","substring","childNode","isLeafNode","isEmpty","updateImmediateChild","updatePriority","children_1","childrenHavePriority_1","child","getPriority","push","NamedNode","length","childSet","buildChildSet","namedNode","sortedChildSet","PRIORITY_INDEX","getCompare","IndexMap","Default","resolveDeferredValue","node","existingVal","serverValues","rawPri","val","resolveDeferredLeafValue","getImmediateChild","value","getValue","newNode","forEachChild","childName","newChildNode","applySubtreeWrite","relativePath","writeTree","updateChild","priorityWrite_1","children","inorderTraversal","childKey","childTree","getChild","registerDatabase","instance","SDK_VERSION","namespace","INTERNAL","registerComponent","component","Component","container","url","app","getProvider","getImmediate","authProvider","RepoManager","getInstance","databaseFromApp","setServiceProps","Reference","Query","Database","DataSnapshot","enableLogging","ServerValue","TEST_ACCESS","setMultipleInstances","registerVersion","version","isNodeSdk","process","Object","defineProperty","firebase","_interopDefault","ex","tslib","logger$1","DOMStorageWrapper","domStorage_","prefix_","prototype","set","DOMStorageWrapper.prototype.set","removeItem","prefixedName_","setItem","stringify","get","DOMStorageWrapper.prototype.get","storedVal","getItem","jsonEval","remove","DOMStorageWrapper.prototype.remove","DOMStorageWrapper.prototype.prefixedName_","toString","DOMStorageWrapper.prototype.toString","MemoryStorage","cache_","isInMemoryStorage","MemoryStorage.prototype.set","MemoryStorage.prototype.get","MemoryStorage.prototype.remove","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","message","i","arg","isArray","apply","logger","firstLog_","logger_","persistent","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spread","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","document","readyState","called_1","wrappedFn_1","body","setTimeout","addEventListener","attachEvent","a","b","MIN_NAME","MAX_NAME","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","keys","k","sort","splitStringBySize","segsize","len","dataSegs","c","doubleToIEEE754String","v","f","s","Infinity","Math","abs","pow","ln","min","floor","LN2","bias","round","fbits","bits","ebits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","test","intVal","exceptionGuard","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","Path.prototype.getFront","getLength","Path.prototype.getLength","popFront","Path.prototype.popFront","getBack","Path.prototype.getBack","Path.prototype.toString","pathString","toUrlEncodedString","Path.prototype.toUrlEncodedString","encodeURIComponent","String","slice","Path.prototype.slice","begin","parent","Path.prototype.parent","pieces","Path.prototype.child","childPathObj","childPieces","Path.prototype.isEmpty","Path.relativePath","outerPath","innerPath","outer","inner","comparePaths","Path.comparePaths","leftKeys","rightKeys","cmp","equals","Path.prototype.equals","other","j","Path.prototype.contains","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","ValidationPath.prototype.push","pop","ValidationPath.prototype.pop","last","ValidationPath.prototype.checkValid_","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","ValidationPath.prototype.toErrorString","RepoInfo","host","secure","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","RepoInfo.prototype.needsQueryParam","isCustomHost","isCacheableHost","RepoInfo.prototype.isCacheableHost","isDemoHost","RepoInfo.prototype.isDemoHost","RepoInfo.prototype.isCustomHost","updateHost","RepoInfo.prototype.updateHost","newHost","connectionURL","RepoInfo.prototype.connectionURL","type","params","WEBSOCKET","connURL","LONG_POLLING","pairs","RepoInfo.prototype.toString","toURLString","RepoInfo.prototype.toURLString","parseRepoInfo","dataURL","subdomain","scheme","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","_a","results","queryString","charAt","_b","__values","_c","next","done","segment","kv","e_1_1","e_1","return","call","hostWithoutPort","dotInd","location","protocol","repoInfo","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","MAX_LEAF_SIZE_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateWritablePath","validateUrl","parsedUrl","OnDisconnect","repo_","cancel","OnDisconnect.prototype.cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","OnDisconnect.prototype.remove","onDisconnectSet","OnDisconnect.prototype.set","setWithPriority","OnDisconnect.prototype.setWithPriority","onDisconnectSetWithPriority","OnDisconnect.prototype.update","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","TransactionResult.prototype.toJSON","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","PUSH_CHARS","random","Wrap","NamedNode.Wrap","Index","Index.prototype.getCompare","compare","indexedValueChanged","Index.prototype.indexedValueChanged","oldNode","oldWrapped","newWrapped","minPost","Index.prototype.minPost","MIN","__EMPTY_NODE","KeyIndex","_super","__extends","KeyIndex.prototype.compare","isDefinedOn","KeyIndex.prototype.isDefinedOn","assertionError","KeyIndex.prototype.indexedValueChanged","KeyIndex.prototype.minPost","maxPost","KeyIndex.prototype.maxPost","makePost","KeyIndex.prototype.makePost","indexValue","KeyIndex.prototype.toString","KEY_INDEX","MAX_NODE","priorityHashText","validatePriorityNode","priorityNode","__childrenNodeConstructor","value_","priorityNode_","lazyHash_","LeafNode.prototype.isLeafNode","LeafNode.prototype.getPriority","LeafNode.prototype.updatePriority","newPriorityNode","LeafNode.prototype.getImmediateChild","LeafNode.prototype.getChild","hasChild","LeafNode.prototype.hasChild","getPredecessorChildName","LeafNode.prototype.getPredecessorChildName","LeafNode.prototype.updateImmediateChild","LeafNode.prototype.updateChild","front","LeafNode.prototype.isEmpty","numChildren","LeafNode.prototype.numChildren","LeafNode.prototype.forEachChild","index","action","LeafNode.prototype.val","exportFormat","hash","LeafNode.prototype.hash","toHash","LeafNode.prototype.getValue","compareTo","LeafNode.prototype.compareTo","compareToLeafNode_","LeafNode.prototype.compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","LeafNode.prototype.withIndex","isIndexed","LeafNode.prototype.isIndexed","LeafNode.prototype.equals","PriorityIndex","PriorityIndex.prototype.compare","aPriority","bPriority","indexCmp","PriorityIndex.prototype.isDefinedOn","PriorityIndex.prototype.indexedValueChanged","PriorityIndex.prototype.minPost","PriorityIndex.prototype.maxPost","MAX_NODE$1","PriorityIndex.prototype.makePost","nodeFromJSON","PriorityIndex.prototype.toString","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","SortedMapIterator.prototype.getNext","result","hasNext","SortedMapIterator.prototype.hasNext","peek","SortedMapIterator.prototype.peek","LLRBNode","color","RED","SortedMap","copy","LLRBNode.prototype.copy","count","LLRBNode.prototype.count","LLRBNode.prototype.isEmpty","LLRBNode.prototype.inorderTraversal","reverseTraversal","LLRBNode.prototype.reverseTraversal","min_","LLRBNode.prototype.min_","minKey","LLRBNode.prototype.minKey","maxKey","LLRBNode.prototype.maxKey","insert","LLRBNode.prototype.insert","n","fixUp_","removeMin_","LLRBNode.prototype.removeMin_","isRed_","moveRedLeft_","LLRBNode.prototype.remove","rotateRight_","moveRedRight_","smallest","LLRBNode.prototype.isRed_","LLRBNode.prototype.fixUp_","rotateLeft_","colorFlip_","LLRBNode.prototype.moveRedLeft_","LLRBNode.prototype.moveRedRight_","LLRBNode.prototype.rotateLeft_","nl","LLRBNode.prototype.rotateRight_","nr","LLRBNode.prototype.colorFlip_","checkMaxDepth_","LLRBNode.prototype.checkMaxDepth_","blackDepth","check_","LLRBNode.prototype.check_","BLACK","LLRBEmptyNode","LLRBEmptyNode.prototype.copy","LLRBEmptyNode.prototype.insert","LLRBEmptyNode.prototype.remove","LLRBEmptyNode.prototype.count","LLRBEmptyNode.prototype.isEmpty","LLRBEmptyNode.prototype.inorderTraversal","LLRBEmptyNode.prototype.reverseTraversal","LLRBEmptyNode.prototype.minKey","LLRBEmptyNode.prototype.maxKey","LLRBEmptyNode.prototype.check_","LLRBEmptyNode.prototype.isRed_","comparator_","root_","SortedMap.prototype.insert","SortedMap.prototype.remove","SortedMap.prototype.get","getPredecessorKey","SortedMap.prototype.getPredecessorKey","rightParent","SortedMap.prototype.isEmpty","SortedMap.prototype.count","SortedMap.prototype.minKey","SortedMap.prototype.maxKey","SortedMap.prototype.inorderTraversal","SortedMap.prototype.reverseTraversal","getIterator","SortedMap.prototype.getIterator","resultGenerator","getIteratorFrom","SortedMap.prototype.getIteratorFrom","getReverseIteratorFrom","SortedMap.prototype.getReverseIteratorFrom","getReverseIterator","SortedMap.prototype.getReverseIterator","LOG_2","Base12Num","current_","mask","bits_","nextBitIsOne","Base12Num.prototype.nextBitIsOne","childList","keyFn","mapSortFn","buildBalancedTree","low","high","middle","root","buildFrom12Array","base12","buildPennant","chunkSize","pennant","isOne","_defaultIndexMap","fallbackObject","indexes_","indexSet_","IndexMap.prototype.get","indexKey","sortedMap","safeGet","hasIndex","IndexMap.prototype.hasIndex","indexDefinition","addIndex","IndexMap.prototype.addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","__assign","newIndexes","addToIndexes","IndexMap.prototype.addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","IndexMap.prototype.removeFromIndexes","children_","indexMap_","ChildrenNode.prototype.isLeafNode","ChildrenNode.prototype.getPriority","ChildrenNode.prototype.updatePriority","ChildrenNode.prototype.getImmediateChild","ChildrenNode.prototype.getChild","ChildrenNode.prototype.hasChild","ChildrenNode.prototype.updateImmediateChild","newIndexMap","newPriority","ChildrenNode.prototype.updateChild","newImmediateChild","ChildrenNode.prototype.isEmpty","ChildrenNode.prototype.numChildren","ChildrenNode.prototype.val","numKeys","allIntegerKeys","array","ChildrenNode.prototype.hash","toHash_1","childHash","ChildrenNode.prototype.getPredecessorChildName","idx","resolveIndex_","predecessor","getFirstChildName","ChildrenNode.prototype.getFirstChildName","getFirstChild","ChildrenNode.prototype.getFirstChild","getLastChildName","ChildrenNode.prototype.getLastChildName","getLastChild","ChildrenNode.prototype.getLastChild","ChildrenNode.prototype.forEachChild","wrappedNode","ChildrenNode.prototype.getIterator","ChildrenNode.prototype.getIteratorFrom","startPost","iterator","ChildrenNode.prototype.getReverseIterator","ChildrenNode.prototype.getReverseIteratorFrom","endPost","ChildrenNode.prototype.compareTo","MAX_NODE$2","ChildrenNode.prototype.withIndex","ChildrenNode.prototype.isIndexed","ChildrenNode.prototype.equals","thisIter","otherIter","thisCurrent","otherCurrent","ChildrenNode.prototype.resolveIndex_","MaxNode","MaxNode.prototype.compareTo","MaxNode.prototype.equals","MaxNode.prototype.getPriority","MaxNode.prototype.getImmediateChild","MaxNode.prototype.isEmpty","defineProperties","MAX","VALUE_INDEX","ValueIndex","ValueIndex.prototype.compare","ValueIndex.prototype.isDefinedOn","ValueIndex.prototype.indexedValueChanged","ValueIndex.prototype.minPost","ValueIndex.prototype.maxPost","ValueIndex.prototype.makePost","valueNode","ValueIndex.prototype.toString","PathIndex","indexPath_","extractChild","PathIndex.prototype.extractChild","snap","PathIndex.prototype.isDefinedOn","PathIndex.prototype.compare","aChild","bChild","PathIndex.prototype.makePost","PathIndex.prototype.maxPost","PathIndex.prototype.toString","node_","ref_","index_","DataSnapshot.prototype.val","exportVal","DataSnapshot.prototype.exportVal","DataSnapshot.prototype.toJSON","exists","DataSnapshot.prototype.exists","DataSnapshot.prototype.child","childPathString","childPath","childRef","DataSnapshot.prototype.hasChild","DataSnapshot.prototype.getPriority","forEach","DataSnapshot.prototype.forEach","hasChildren","DataSnapshot.prototype.hasChildren","getKey","DataSnapshot.prototype.numChildren","getRef","DataSnapshot.prototype.getRef","DataEvent","eventRegistration","prevName","getPath","DataEvent.prototype.getPath","ref","getParent","getEventType","DataEvent.prototype.getEventType","getEventRunner","DataEvent.prototype.getEventRunner","DataEvent.prototype.toString","CancelEvent","CancelEvent.prototype.getPath","CancelEvent.prototype.getEventType","CancelEvent.prototype.getEventRunner","CancelEvent.prototype.toString","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","ValueEventRegistration.prototype.respondsTo","createEvent","ValueEventRegistration.prototype.createEvent","change","query","getQueryParams","getIndex","snapshotNode","ValueEventRegistration.prototype.getEventRunner","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","ValueEventRegistration.prototype.createCancelEvent","matches","ValueEventRegistration.prototype.matches","hasAnyCallback","ValueEventRegistration.prototype.hasAnyCallback","ChildEventRegistration","callbacks_","ChildEventRegistration.prototype.respondsTo","eventToCheck","ChildEventRegistration.prototype.createCancelEvent","ChildEventRegistration.prototype.createEvent","ChildEventRegistration.prototype.getEventRunner","cancelCB_2","cb_2","ChildEventRegistration.prototype.matches","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","ChildEventRegistration.prototype.hasAnyCallback","__referenceConstructor","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","Query.validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","startName","getIndexStartName","tooManyArgsError","wrongArgTypeError","endName","getIndexEndName","validateLimit_","Query.validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","Query.prototype.validateNoPreviousOrderByCall_","Query.prototype.getQueryParams","Query.prototype.getRef","on","Query.prototype.on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","Query.prototype.onValueEvent","cancelCallback","addEventCallbackForQuery","Query.prototype.onChildEvent","off","Query.prototype.off","validateContextObject","removeEventCallbackForQuery","once","Query.prototype.once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","Query.prototype.limitToFirst","limit","limitToLast","Query.prototype.limitToLast","orderByChild","Query.prototype.orderByChild","parsedPath","newParams","orderBy","orderByKey","Query.prototype.orderByKey","orderByPriority","Query.prototype.orderByPriority","orderByValue","Query.prototype.orderByValue","startAt","Query.prototype.startAt","endAt","Query.prototype.endAt","equalTo","Query.prototype.equalTo","Query.prototype.toString","Query.prototype.toJSON","queryObject","Query.prototype.queryObject","getQueryObject","queryIdentifier","Query.prototype.queryIdentifier","isEqual","Query.prototype.isEqual","sameRepo","samePath","sameQueryIdentifier","Query.getCancelAndContextArgs_","cancelOrContext","ExistingValueProvider","ExistingValueProvider.prototype.getImmediateChild","ExistingValueProvider.prototype.node","DeferredValueProvider","syncTree","syncTree_","DeferredValueProvider.prototype.getImmediateChild","DeferredValueProvider.prototype.node","calcCompleteEventCache","op","JSON","delta","existingNode","resolveDeferredValueSnapshot","existing","SparseSnapshotTree","Map","find","SparseSnapshotTree.prototype.find","size","has","remember","SparseSnapshotTree.prototype.remember","clear","forget","SparseSnapshotTree.prototype.forget","self_1","tree","safeToRemove","delete","forEachTree","SparseSnapshotTree.prototype.forEachTree","prefixPath","func","SparseSnapshotTree.prototype.forEachChild","OperationType","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","OperationSource.forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","AckUserWrite.prototype.operationForChild","subtree","Empty","emptyChildrenSingleton","ImmutableTree","fromObject","ImmutableTree.fromObject","childSnap","ImmutableTree.prototype.isEmpty","findRootMostMatchingPathAndValue","ImmutableTree.prototype.findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","ImmutableTree.prototype.findRootMostValueAndPath","ImmutableTree.prototype.subtree","ImmutableTree.prototype.set","toSet","newChild","ImmutableTree.prototype.remove","ImmutableTree.prototype.get","setTree","ImmutableTree.prototype.setTree","newTree","fold","ImmutableTree.prototype.fold","fold_","ImmutableTree.prototype.fold_","pathSoFar","accum","findOnPath","ImmutableTree.prototype.findOnPath","findOnPath_","ImmutableTree.prototype.findOnPath_","pathToFollow","nextChild","foreachOnPath","ImmutableTree.prototype.foreachOnPath","foreachOnPath_","ImmutableTree.prototype.foreachOnPath_","currentRelativePath","foreach","ImmutableTree.prototype.foreach","foreach_","ImmutableTree.prototype.foreach_","foreachChild","ImmutableTree.prototype.foreachChild","ListenComplete","LISTEN_COMPLETE","ListenComplete.prototype.operationForChild","Overwrite","OVERWRITE","Overwrite.prototype.operationForChild","Merge","MERGE","Merge.prototype.operationForChild","Merge.prototype.toString","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","CacheNode.prototype.isFullyInitialized","isFiltered","CacheNode.prototype.isFiltered","isCompleteForPath","CacheNode.prototype.isCompleteForPath","isCompleteForChild","CacheNode.prototype.isCompleteForChild","getNode","CacheNode.prototype.getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","ViewCache.prototype.updateEventSnap","eventSnap","complete","filtered","updateServerSnap","ViewCache.prototype.updateServerSnap","serverSnap","getEventCache","ViewCache.prototype.getEventCache","getCompleteEventSnap","ViewCache.prototype.getCompleteEventSnap","getServerCache","ViewCache.prototype.getServerCache","getCompleteServerSnap","ViewCache.prototype.getCompleteServerSnap","Change","oldSnap","valueChange","Change.valueChange","VALUE","childAddedChange","Change.childAddedChange","CHILD_ADDED","childRemovedChange","Change.childRemovedChange","CHILD_REMOVED","childChangedChange","Change.childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","Change.childMovedChange","CHILD_MOVED","IndexedFilter","IndexedFilter.prototype.updateChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","IndexedFilter.prototype.updateFullNode","newSnap","IndexedFilter.prototype.updatePriority","filtersNodes","IndexedFilter.prototype.filtersNodes","getIndexedFilter","IndexedFilter.prototype.getIndexedFilter","IndexedFilter.prototype.getIndex","ChildChangeAccumulator","changeMap","ChildChangeAccumulator.prototype.trackChildChange","oldChange","oldType","getChanges","ChildChangeAccumulator.prototype.getChanges","from","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","NoCompleteChildSource_.prototype.getCompleteChild","getChildAfterChild","NoCompleteChildSource_.prototype.getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","WriteTreeCompleteChildSource.prototype.getCompleteChild","serverNode","calcCompleteChild","WriteTreeCompleteChildSource.prototype.getChildAfterChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","ViewProcessor.prototype.assertIndexed","applyOperation","ViewProcessor.prototype.applyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","newViewCache","applyUserOverwrite_","filterServerNode","applyServerOverwrite_","applyUserMerge_","applyServerMerge_","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","ViewProcessor.maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","ViewProcessor.prototype.generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","serverCache","completeEventChildren","calcCompleteEventChildren","completeChildren","newEventCache","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","eventChildUpdate","newEventChild","ViewProcessor.prototype.applyServerOverwrite_","changedSnap","oldServerSnap","serverFilter","newServerCache","newServerNode","ViewProcessor.prototype.applyUserOverwrite_","newEventSnap","cacheHasChild_","ViewProcessor.cacheHasChild_","ViewProcessor.prototype.applyUserMerge_","changedChildren","curViewCache","writePath","applyMerge_","ViewProcessor.prototype.applyMerge_","merge","ViewProcessor.prototype.applyServerMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ViewProcessor.prototype.ackUserWrite_","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","ViewProcessor.prototype.listenComplete_","oldServerNode","ViewProcessor.prototype.revertUserWrite_","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","EventGenerator.prototype.generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","EventGenerator.prototype.generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","EventGenerator.prototype.materializeSingleChange_","EventGenerator.prototype.compareChanges_","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","View.prototype.getQuery","View.prototype.getServerCache","getCompleteServerCache","View.prototype.getCompleteServerCache","cache","loadsAllData","View.prototype.isEmpty","addEventRegistration","View.prototype.addEventRegistration","removeEventRegistration","View.prototype.removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","View.prototype.applyOperation","generateEventsForChanges_","getInitialEvents","View.prototype.getInitialEvents","initialChanges","eventNode","View.prototype.generateEventsForChanges_","__referenceConstructor$1","SyncPoint","views","SyncPoint.prototype.isEmpty","SyncPoint.prototype.applyOperation","optCompleteServerCache","view","SyncPoint.prototype.addEventRegistration","serverCacheComplete","eventCacheComplete","SyncPoint.prototype.removeEventRegistration","removed","hadCompleteView","hasCompleteView","entries","_d","__read","viewQueryId","e_2_1","e_2","getQueryViews","SyncPoint.prototype.getQueryViews","e_3_1","e_3","SyncPoint.prototype.getCompleteServerCache","e_4_1","e_4","viewForQuery","SyncPoint.prototype.viewForQuery","getCompleteView","viewExistsForQuery","SyncPoint.prototype.viewExistsForQuery","SyncPoint.prototype.hasCompleteView","SyncPoint.prototype.getCompleteView","e_5_1","e_5","CompoundWrite","writeTree_","addWrite","CompoundWrite.prototype.addWrite","rootmost","rootMostPath","newWriteTree","addWrites","CompoundWrite.prototype.addWrites","updates","newWrite","removeWrite","CompoundWrite.prototype.removeWrite","hasCompleteWrite","CompoundWrite.prototype.hasCompleteWrite","getCompleteNode","CompoundWrite.prototype.getCompleteNode","getCompleteChildren","CompoundWrite.prototype.getCompleteChildren","childCompoundWrite","CompoundWrite.prototype.childCompoundWrite","shadowingNode","CompoundWrite.prototype.isEmpty","CompoundWrite.prototype.apply","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTree.prototype.childWrites","WriteTreeRef","addOverwrite","WriteTree.prototype.addOverwrite","writeId","visible","addMerge","WriteTree.prototype.addMerge","getWrite","WriteTree.prototype.getWrite","record","WriteTree.prototype.removeWrite","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","WriteTree.prototype.getCompleteWriteData","WriteTree.prototype.calcCompleteEventCache","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","WriteTree.prototype.calcCompleteEventChildren","completeServerChildren","topLevelSet","merge_1","WriteTree.prototype.calcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","WriteTree.prototype.calcCompleteChild","WriteTree.prototype.shadowingWrite","WriteTree.prototype.calcIndexedSlice","toIterate","WriteTree.prototype.recordContainsPath_","writeRecord","WriteTree.prototype.resetTree_","DefaultFilter_","WriteTree.DefaultFilter_","WriteTree.layerTree_","writes","treeRoot","compoundWrite","deepNode","treePath_","WriteTreeRef.prototype.calcCompleteEventCache","WriteTreeRef.prototype.calcCompleteEventChildren","WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite","WriteTreeRef.prototype.shadowingWrite","WriteTreeRef.prototype.calcIndexedSlice","WriteTreeRef.prototype.calcCompleteChild","existingServerCache","WriteTreeRef.prototype.child","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","SyncTree.prototype.applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","SyncTree.prototype.applyUserMerge","changeTree","ackUserWrite","SyncTree.prototype.ackUserWrite","needToReevaluate","affectedTree_1","applyServerOverwrite","SyncTree.prototype.applyServerOverwrite","applyServerMerge","SyncTree.prototype.applyServerMerge","applyListenComplete","SyncTree.prototype.applyListenComplete","applyTaggedQueryOverwrite","SyncTree.prototype.applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","SyncTree.prototype.applyTaggedQueryMerge","applyTaggedListenComplete","SyncTree.prototype.applyTaggedListenComplete","SyncTree.prototype.addEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","SyncTree.prototype.removeEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","defaultTag","queryToRemove","tagToRemove","removeTags_","SyncTree.prototype.calcCompleteEventCache","includeHiddenSets","SyncTree.prototype.collectDistinctViewsForSubTree_","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","SyncTree.prototype.removeTags_","queries","removedQuery","removedQueryKey","removedQueryTag","SyncTree.queryForListening_","isDefault","SyncTree.prototype.setupListener_","queriesToStop","queries_1","childQueries","queryToStop","SyncTree.prototype.createListenerForView_","status","reason","code","toUpperCase","SyncTree.makeQueryKey_","SyncTree.parseQueryKey_","splitIndex","SyncTree.prototype.queryKeyForTag_","SyncTree.prototype.tagForQuery_","SyncTree.getNextQueryTag_","nextQueryTag_","SyncTree.prototype.applyTaggedOperation_","SyncTree.prototype.applyOperationToSyncPoints_","applyOperationHelper_","SyncTree.prototype.applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SyncTree.prototype.applyOperationDescendantsHelper_","SnapshotHolder","rootNode_","SnapshotHolder.prototype.getNode","updateSnapshot","SnapshotHolder.prototype.updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","StatsCollection.prototype.incrementCounter","amount","StatsCollection.prototype.get","deepCopy","StatsManager","getCollection","StatsManager.getCollection","hashString","collections_","getOrCreateReporter","StatsManager.getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","StatsListener.prototype.get","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","FIRST_STATS_MIN_TIME","reportStats_","includeStat","StatsReporter.prototype.includeStat","StatsReporter.prototype.reportStats_","stats","reportedStats","haveStatsToReport","reportStats","REPORT_STATS_INTERVAL","EventQueue","eventLists_","recursionDepth_","queueEvents","EventQueue.prototype.queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","EventQueue.prototype.raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","EventQueue.prototype.raiseEventsForChangedPath","changedPath","EventQueue.prototype.raiseQueuedEventsMatchingPredicate_","sentAll","eventList","raise","events_","EventList.prototype.add","EventList.prototype.raise","eventFn","EventList.prototype.getPath","EventEmitter","allowedEvents_","listeners_","trigger","EventEmitter.prototype.trigger","listeners","EventEmitter.prototype.on","validateEventType_","getInitialEvent","EventEmitter.prototype.off","EventEmitter.prototype.validateEventType_","et","VisibilityMonitor","visibilityChange","hidden","visible_","VisibilityMonitor.getInstance","VisibilityMonitor.prototype.getInitialEvent","OnlineMonitor","online_","isMobileCordova","OnlineMonitor.getInstance","OnlineMonitor.prototype.getInitialEvent","currentlyOnline","OnlineMonitor.prototype.currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","PacketReceiver.prototype.closeAfter","responseNum","handleResponse","PacketReceiver.prototype.handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesReceived","bytesSent","everConnected_","log_","stats_","urlFn","this.urlFn","open","BrowserPollConnection.prototype.open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","FIREBASE_LONGPOLL_START_PARAM","password","FIREBASE_LONGPOLL_CLOSE_COMMAND","sendNewPolls","pN","urlParams","FIREBASE_LONGPOLL_SERIAL_PARAM","uniqueCallbackIdentifier","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","VERSION_PARAM","PROTOCOL_VERSION","TRANSPORT_SESSION_PARAM","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","href","FORGE_DOMAIN","REFERER_PARAM","FORGE_REF","connectURL","addTag","start","BrowserPollConnection.prototype.start","startLongPoll","addDisconnectPingFrame","forceAllow","BrowserPollConnection.forceAllow","forceAllow_","forceDisallow","BrowserPollConnection.forceDisallow","forceDisallow_","isAvailable","BrowserPollConnection.isAvailable","createElement","Windows","UI","markConnectionHealthy","BrowserPollConnection.prototype.markConnectionHealthy","shutdown_","BrowserPollConnection.prototype.shutdown_","close","myDisconnFrame","removeChild","BrowserPollConnection.prototype.onClosed_","BrowserPollConnection.prototype.close","send","BrowserPollConnection.prototype.send","dataStr","base64data","base64Encode","MAX_PAYLOAD_SIZE","enqueueSegment","BrowserPollConnection.prototype.addDisconnectPingFrame","pw","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","src","style","display","appendChild","BrowserPollConnection.prototype.incrementIncomingBytes_","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","myIFrame","createIFrame_","script","iframeContents","doc","FirebaseIFrameScriptHolder.createIFrame_","iframe","contentWindow","contentDocument","FirebaseIFrameScriptHolder.prototype.close","alive","innerHTML","FirebaseIFrameScriptHolder.prototype.startLongPoll","myID","myPW","newRequest_","FirebaseIFrameScriptHolder.prototype.newRequest_","theURL","curDataString","MAX_URL_DATA_SIZE","nextSeg","d","SEG_HEADER_SIZE","theSeg","shift","seg","ts","addLongPollTag_","FirebaseIFrameScriptHolder.prototype.enqueueSegment","segnum","totalsegs","FirebaseIFrameScriptHolder.prototype.addLongPollTag_","serial","doNewRequest","keepaliveTimeout","readyStateCB","FirebaseIFrameScriptHolder.prototype.addTag","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","newScript_1.onreadystatechange","rstate","parentNode","onerror","newScript_1.onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","frames","keepaliveTimer","totalFrames","connectionURL_","WebSocketConnection.connectionURL_","WebSocketConnection.prototype.open","options","headers","platform","device","CONSTANTS","NODE_ADMIN","env","proxy","origin","mySock","onopen","this.mySock.onopen","onclose","this.mySock.onclose","onmessage","this.mySock.onmessage","m","handleIncomingFrame","this.mySock.onerror","WebSocketConnection.prototype.start","WebSocketConnection.forceDisallow","WebSocketConnection.isAvailable","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","oldAndroidRegex","parseFloat","previouslyFailed","WebSocketConnection.previouslyFailed","WebSocketConnection.prototype.markConnectionHealthy","appendFrame_","WebSocketConnection.prototype.appendFrame_","fullMess","jsonMess","handleNewFrameCount_","WebSocketConnection.prototype.handleNewFrameCount_","frameCount","extractFrameCount_","WebSocketConnection.prototype.extractFrameCount_","isNaN","WebSocketConnection.prototype.handleIncomingFrame","mess","resetKeepAlive","remainingData","WebSocketConnection.prototype.send","WEBSOCKET_MAX_FRAME_SIZE","sendString_","WebSocketConnection.prototype.shutdown_","clearInterval","WebSocketConnection.prototype.onClosed_","WebSocketConnection.prototype.close","WebSocketConnection.prototype.resetKeepAlive","setInterval","WebSocketConnection.prototype.sendString_","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","TransportManager.prototype.initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","TransportManager.prototype.initialTransport","upgradeTransport","TransportManager.prototype.upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","Connection.prototype.start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","rx_","tx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","BYTES_RECEIVED_HEALTHY_OVERRIDE","BYTES_SENT_HEALTHY_OVERRIDE","Connection.prototype.nextTransportId_","Connection.prototype.disconnReceiver_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","Connection.prototype.connReceiver_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","Connection.prototype.sendRequest","dataMsg","sendData_","msg","t","tryCleanupConnection","Connection.prototype.tryCleanupConnection","onSecondaryControl_","Connection.prototype.onSecondaryControl_","controlData","MESSAGE_TYPE","cmd","SWITCH_ACK","upgradeIfSecondaryHealthy_","CONTROL_RESET","CONTROL_PONG","secondaryResponsesRequired_","Connection.prototype.onSecondaryMessageReceived_","parsedData","layer","Connection.prototype.upgradeIfSecondaryHealthy_","proceedWithUpgrade_","PING","Connection.prototype.proceedWithUpgrade_","END_TRANSMISSION","Connection.prototype.onPrimaryMessageReceived_","onControl_","onDataMessage_","Connection.prototype.onDataMessage_","onPrimaryResponse_","Connection.prototype.onPrimaryResponse_","Connection.prototype.onControl_","MESSAGE_DATA","payload","SERVER_HELLO","onHandshake_","CONTROL_SHUTDOWN","onConnectionShutdown_","onReset_","CONTROL_ERROR","sendPingOnPrimaryIfNecessary_","Connection.prototype.onHandshake_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","Connection.prototype.tryStartUpgrade_","startUpgrade_","Connection.prototype.startUpgrade_","Connection.prototype.onReset_","closeConnections_","Connection.prototype.onConnectionEstablished_","Connection.prototype.sendPingOnPrimaryIfNecessary_","Connection.prototype.onSecondaryConnectionLost_","Connection.prototype.onConnectionLost_","Connection.prototype.onConnectionShutdown_","Connection.prototype.sendData_","Connection.prototype.close","Connection.prototype.closeConnections_","ServerActions","put","ServerActions.prototype.put","ServerActions.prototype.merge","refreshAuthToken","ServerActions.prototype.refreshAuthToken","token","onDisconnectPut","ServerActions.prototype.onDisconnectPut","onDisconnectMerge","ServerActions.prototype.onDisconnectMerge","ServerActions.prototype.onDisconnectCancel","ServerActions.prototype.reportStats","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","RECONNECT_MIN_DELAY","maxReconnectDelay_","RECONNECT_MAX_DELAY_DEFAULT","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","PersistentConnection.prototype.sendRequest","onResponse","curReqNum","listen","PersistentConnection.prototype.listen","currentHashFn","listenSpec","sendListen_","PersistentConnection.prototype.sendListen_","req","p","warnOnListenWarnings_","removeListen_","PersistentConnection.warnOnListenWarnings_","warnings","indexSpec","indexPath","PersistentConnection.prototype.refreshAuthToken","tryAuth","reduceReconnectDelayIfAdminCredential_","PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_","credential","isAdmin","RECONNECT_MAX_DELAY_FOR_ADMINS","PersistentConnection.prototype.tryAuth","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","PersistentConnection.prototype.unlisten","sendUnlisten_","PersistentConnection.prototype.sendUnlisten_","queryObj","PersistentConnection.prototype.onDisconnectPut","sendOnDisconnect_","PersistentConnection.prototype.onDisconnectMerge","PersistentConnection.prototype.onDisconnectCancel","PersistentConnection.prototype.sendOnDisconnect_","request","response","PersistentConnection.prototype.put","putInternal","PersistentConnection.prototype.merge","PersistentConnection.prototype.putInternal","sendPut_","PersistentConnection.prototype.sendPut_","queued","PersistentConnection.prototype.reportStats","errorReason","PersistentConnection.prototype.onDataMessage_","reqNum","onDataPush_","PersistentConnection.prototype.onDataPush_","onListenRevoked_","onSecurityDebugPacket_","PersistentConnection.prototype.onReady_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","PersistentConnection.prototype.scheduleConnect_","establishConnection_","PersistentConnection.prototype.onVisible_","PersistentConnection.prototype.onOnline_","online","onRealtimeDisconnect_","PersistentConnection.prototype.onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","RECONNECT_DELAY_RESET_TIMEOUT","timeSinceLastConnectAttempt","reconnectDelay","RECONNECT_DELAY_MULTIPLIER","PersistentConnection.prototype.establishConnection_","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","forceRefresh","getToken","then","accessToken","interrupt","SERVER_KILL_INTERRUPT_REASON","PersistentConnection.prototype.interrupt","resume","PersistentConnection.prototype.resume","PersistentConnection.prototype.handleTimestamp_","serverTimeOffset","PersistentConnection.prototype.cancelSentTransactions_","PersistentConnection.prototype.onListenRevoked_","q","PersistentConnection.prototype.removeListen_","normalizedPathString","PersistentConnection.prototype.onAuthRevoked_","statusCode","explanation","INVALID_AUTH_TOKEN_THRESHOLD","notifyForInvalidToken","PersistentConnection.prototype.onSecurityDebugPacket_","console","PersistentConnection.prototype.restoreState_","_e","_f","PersistentConnection.prototype.sendConnectStats_","clientName","NODE_CLIENT","isReactNative","PersistentConnection.prototype.shouldReconnect_","ReadonlyRestClient","listens_","ReadonlyRestClient.prototype.reportStats","getListenId_","ReadonlyRestClient.getListenId_","ReadonlyRestClient.prototype.listen","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","status_1","ReadonlyRestClient.prototype.unlisten","ReadonlyRestClient.prototype.refreshAuthToken","ReadonlyRestClient.prototype.restRequest_","authTokenData","authToken","querystring","xhr","XMLHttpRequest","xhr.onreadystatechange","responseText","Repo","forceRestClient","authTokenProvider","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","search","authOverride","appId","addTokenChangeListener","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","Repo.prototype.toString","Repo.prototype.name","serverTime","Repo.prototype.serverTime","offset","offsetNode","generateServerValues","Repo.prototype.generateServerValues","Repo.prototype.onDataUpdate_","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","Repo.prototype.interceptServerData_","Repo.prototype.onConnectStatus_","connectStatus","runOnDisconnectEvents_","Repo.prototype.onServerInfoUpdate_","Repo.prototype.updateInfo_","getNextWriteId_","Repo.prototype.getNextWriteId_","Repo.prototype.setWithPriority","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","Repo.prototype.update","childrenToMerge","empty","changedKey","changedValue","writeId_1","Repo.prototype.runOnDisconnectEvents_","resolvedOnDisconnectTree","resolved","Repo.prototype.onDisconnectCancel","Repo.prototype.onDisconnectSet","Repo.prototype.onDisconnectSetWithPriority","Repo.prototype.onDisconnectUpdate","Repo.prototype.addEventCallbackForQuery","Repo.prototype.removeEventCallbackForQuery","Repo.prototype.interrupt","INTERRUPT_REASON","Repo.prototype.resume","Repo.prototype.stats","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","Repo.prototype.statsIncrementCounter","metric","Repo.prototype.log_","Repo.prototype.callOnCompleteCallback","__database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","RangedFilter.prototype.getStartPost","getEndPost","RangedFilter.prototype.getEndPost","RangedFilter.prototype.matches","RangedFilter.prototype.updateChild","RangedFilter.prototype.updateFullNode","self","RangedFilter.prototype.updatePriority","RangedFilter.prototype.filtersNodes","RangedFilter.prototype.getIndexedFilter","RangedFilter.prototype.getIndex","RangedFilter.getStartPost_","RangedFilter.getEndPost_","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","LimitedFilter.prototype.updateChild","fullLimitUpdateChild_","LimitedFilter.prototype.updateFullNode","inRange","indexCompare_1","foundStartPost","LimitedFilter.prototype.updatePriority","LimitedFilter.prototype.filtersNodes","LimitedFilter.prototype.getIndexedFilter","LimitedFilter.prototype.getIndex","LimitedFilter.prototype.fullLimitUpdateChild_","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","QueryParams","endNameSet_","endSet_","startNameSet_","startSet_","limitSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","QueryParams.prototype.hasStart","QueryParams.prototype.isViewFromLeft","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","QueryParams.prototype.getIndexStartValue","QueryParams.prototype.getIndexStartName","QueryParams.prototype.hasEnd","QueryParams.prototype.getIndexEndValue","QueryParams.prototype.getIndexEndName","QueryParams.prototype.hasLimit","QueryParams.prototype.hasAnchoredLimit","QueryParams.prototype.getLimit","QueryParams.prototype.getIndex","copy_","QueryParams.prototype.copy_","QueryParams.prototype.limit","newLimit","QueryParams.prototype.limitToFirst","QueryParams.prototype.limitToLast","VIEW_FROM_RIGHT","QueryParams.prototype.startAt","QueryParams.prototype.endAt","QueryParams.prototype.orderBy","QueryParams.prototype.getQueryObject","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","QueryParams.prototype.loadsAllData","QueryParams.prototype.isDefault","QueryParams.prototype.getNodeFilter","QueryParams.prototype.toRestQueryStringParameters","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference.prototype.getKey","Reference.prototype.child","Reference.prototype.getParent","parentPath","getRoot","Reference.prototype.getRoot","databaseProp","Reference.prototype.databaseProp","database","Reference.prototype.set","Reference.prototype.update","Reference.prototype.setWithPriority","Reference.prototype.remove","transaction","Reference.prototype.transaction","transactionUpdate","applyLocally","startTransaction","promiseComplete","setPriority","Reference.prototype.setPriority","Reference.prototype.push","thennablePushRef","pushRef","Promise","Reference.prototype.onDisconnect","TreeNode","childCount","Tree","name_","parent_","subTree","Tree.prototype.subTree","pathObj","Tree.prototype.getValue","setValue","Tree.prototype.setValue","updateParents_","Tree.prototype.clear","Tree.prototype.hasChildren","Tree.prototype.isEmpty","Tree.prototype.forEachChild","forEachDescendant","Tree.prototype.forEachDescendant","includeSelf","childrenFirst","forEachAncestor","Tree.prototype.forEachAncestor","forEachImmediateDescendantWithValue","Tree.prototype.forEachImmediateDescendantWithValue","Tree.prototype.path","Tree.prototype.name","Tree.prototype.parent","Tree.prototype.updateParents_","updateChild_","Tree.prototype.updateChild_","childEmpty","childExists","TransactionStatus","MAX_TRANSACTION_RETRIES_","Repo.prototype.transactionsInit_","transactionQueueTree_","Repo.prototype.startTransaction","valueCallback","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","Repo.prototype.getLatestState_","excludeSets","Repo.prototype.sendReadyTransactions_","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","allRun","sendTransactionQueue_","Repo.prototype.sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","Repo.prototype.rerunTransactions_","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","Repo.prototype.rerunTransactionQueue_","txnsToRerun","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","Repo.prototype.getAncestorTransactionNode_","transactionNode","Repo.prototype.buildTransactionQueue_","transactionQueue","aggregateTransactionQueuesForNode_","Repo.prototype.aggregateTransactionQueuesForNode_","Repo.prototype.pruneCompletedTransactionsBelowNode_","to","Repo.prototype.abortTransactions_","abortTransactionsOnNode_","Repo.prototype.abortTransactionsOnNode_","lastSent","FirebaseAuthTokenProvider","app_","authProvider_","auth_","auth","FirebaseAuthTokenProvider.prototype.getToken","FirebaseAuthTokenProvider.prototype.addTokenChangeListener","addAuthTokenListener","removeTokenChangeListener","FirebaseAuthTokenProvider.prototype.removeTokenChangeListener","removeAuthTokenListener","FirebaseAuthTokenProvider.prototype.notifyForInvalidToken","errorMessage","EmulatorAdminTokenProvider","EmulatorAdminTokenProvider.prototype.getToken","EMULATOR_AUTH_TOKEN","EmulatorAdminTokenProvider.prototype.addTokenChangeListener","EmulatorAdminTokenProvider.prototype.removeTokenChangeListener","EmulatorAdminTokenProvider.prototype.notifyForInvalidToken","_staticInstance","repos_","useRestClient_","RepoManager.getInstance","RepoManager.prototype.interrupt","appName","RepoManager.prototype.resume","RepoManager.prototype.databaseFromApp","dbUrl","DATABASE_URL_OPTION","dbEmulatorHost","FIREBASE_DATABASE_EMULATOR_HOST_VAR","isEmulator","createRepo","deleteRepo","RepoManager.prototype.deleteRepo","appRepos","RepoManager.prototype.createRepo","RepoManager.prototype.forceRestClient","DatabaseInternals","Database.prototype.ref","checkDeleted_","refFromURL","Database.prototype.refFromURL","apiName","parsedURL","Database.prototype.checkDeleted_","goOffline","Database.prototype.goOffline","goOnline","Database.prototype.goOnline","TIMESTAMP","increment","DatabaseInternals.prototype.delete","__awaiter","__generator","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","simpleListen","PersistentConnection.prototype.simpleListen","echo","PersistentConnection.prototype.echo","onEcho","DataConnection","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget"]
}
